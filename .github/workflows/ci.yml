name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  GO_VERSION: '1.24.x'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: gofmt
        run: |
          fmt_out=$(gofmt -s -l .)
          if [ -n "$fmt_out" ]; then
            echo "gofmt found issues:" && echo "$fmt_out"
            exit 1
          fi
      - name: go vet
        run: go vet ./...

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Build
        run: make build
      - name: Test
        run: make test

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/urnetwork-client
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            # Add semantic version tags when pushing a tag like v1.2.3
            # Produces: 1.2.3, 1.2, 1
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
      - name: Log in to GHCR
        if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          cache-from: |
            type=gha
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/urnetwork-client:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/urnetwork-client:buildcache,mode=max

  publish-images-on-release:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.result == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract release tag
        id: tag
        run: |
          # Use the latest Git tag as the version
          ver=$(git describe --tags --abbrev=0)
          echo "version=${ver#v}" >> $GITHUB_OUTPUT
      - name: Build and push (release tag)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/urnetwork-client:${{ steps.tag.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/urnetwork-client:v${{ steps.tag.outputs.version }}
          cache-from: |
            type=gha
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/urnetwork-client:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/urnetwork-client:buildcache,mode=max

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write  # needed to create tags and releases
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
